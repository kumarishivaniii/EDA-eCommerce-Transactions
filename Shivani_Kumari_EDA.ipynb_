{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNwbpu/h2tje2t6AfCJ7lH2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"nKivGUoRnGQ9"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from datetime import datetime\n","# Load datasets\n","customers = pd.read_csv(\"Customers.csv\")\n","products = pd.read_csv(\"Products.csv\")\n","transactions = pd.read_csv(\"Transactions.csv\")\n","# Display basic info\n","print(customers.info())\n","print(products.info())\n","print(transactions.info())\n","# Display basic info\n","print(customers.info())\n","print(products.info())\n","print(transactions.info())\n","# Preview datasets\n","print(customers.head())\n","print(products.head())\n","print(transactions.head())\n","# Check for missing values\n","print(customers.isnull().sum())\n","print(products.isnull().sum())\n","print(transactions.isnull().sum())\n","# Convert dates to datetime format\n","customers['SignupDate'] = pd.to_datetime(customers['SignupDate'])\n","transactions['TransactionDate'] = pd.to_datetime(transactions['TransactionDate'])\n","# Handle any missing or inconsistent data (if necessary)\n","transactions['Price'] = transactions['Price'].fillna(transactions['Price'].mean())  # Example handling\n","# Merge transactions with customers and products\n","merged = transactions.merge(customers, on=\"CustomerID\").merge(products, on=\"ProductID\")\n"," #Preview merged dataset\n","print(merged.head())\n","\n","region_revenue = merged.groupby('Region')['TotalValue'].sum().sort_values(ascending=False)\n","print(region_revenue)\n","region_revenue.plot(kind='bar', title=\"Revenue by Region\", figsize=(8, 5))\n","plt.show()\n","\n","category_sales = merged.groupby('Category')['Quantity'].sum().sort_values(ascending=False)\n","print(category_sales)\n","category_sales.plot(kind='bar', title=\"Best-Selling Product Categories\", figsize=(8, 5))\n","plt.show()\n","\n","merged['Month'] = merged['TransactionDate'].dt.month\n","monthly_sales = merged.groupby('Month')['TotalValue'].sum()\n","print(monthly_sales)\n","monthly_sales.plot(kind='line', title=\"Monthly Sales Trend\", marker='o', figsize=(8, 5))\n","plt.show()\n","\n","clv = merged.groupby('CustomerID')['TotalValue'].sum()\n","print(clv.describe())  # Summary statistics for CLV\n","\n","print(merged.columns)\n","print(transactions.columns)\n","merged = transactions.merge(customers, on='CustomerID').merge(products, on='ProductID')\n","transactions['Price'] = transactions['TotalValue'] / transactions['Quantity']\n"]}]}